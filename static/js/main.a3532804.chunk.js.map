{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","person","name","email","phone","CardList","persons","map","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","a","fetch","jsn","json","res","this","console","log","filteredPeople","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+VAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,0EAAqEH,EAAMI,OAAOC,QAEvF,6BAAKL,EAAMI,OAAOC,OAClB,4BAAIL,EAAMI,OAAOE,QACjB,4BAAIN,EAAMI,OAAOG,YCRVC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,QAAQC,KAAI,SAACN,GAClB,OAAO,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOO,UCLpBC,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEb,UAAU,SACVc,KAAK,OACLF,YAAaA,EACbG,SAAUF,MCJKG,E,kDACnB,aAAe,IAAD,8BACZ,gBAQFH,aAAe,SAACI,GAAD,OAAO,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAN1D,EAAKC,MAAQ,CACXd,QAAS,GACTW,YAAa,IALH,E,4FAWd,8BAAAI,EAAA,sEACoBC,MAAM,8CAD1B,cACQC,EADR,gBAEoBA,EAAIC,OAFxB,OAEQC,EAFR,OAGEC,KAAKV,SAAS,CAAEV,QAASmB,IACzBE,QAAQC,IAAIH,GAJd,gD,0EAOA,WACE,MAAiCC,KAAKN,MAA9Bd,EAAR,EAAQA,QAASW,EAAjB,EAAiBA,YAEXY,EAAiBvB,EAAQwB,QAAO,SAAC7B,GAAD,OACpCA,EAAOC,KAAK6B,cAAcC,SAASf,EAAYc,kBAGjD,OACE,sBAAKjC,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEY,YAAY,gBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUL,QAASuB,W,GAjCMI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3532804.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.scss\";\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://eu.ui-avatars.com/api/?background=FFBD91&color=fff&name=${props.person.name}`}\n      />\n      <h2>{props.person.name}</h2>\n      <p>{props.person.email}</p>\n      <p>{props.person.phone}</p>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./card-list.styles.scss\";\nimport { Card } from \"../card/card.component\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.persons.map((person) => {\n        return <Card key={person.id} person={person} />;\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.styles.scss\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"text\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      persons: [],\n      searchField: \"\",\n    };\n  }\n\n  handleChange = (e) => this.setState({ searchField: e.target.value });\n\n  async componentDidMount() {\n    const jsn = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const res = await jsn.json();\n    this.setState({ persons: res });\n    console.log(res);\n  }\n\n  render() {\n    const { persons, searchField } = this.state;\n\n    const filteredPeople = persons.filter((person) =>\n      person.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Contact list</h1>\n        <SearchBox\n          placeholder=\"Search people\"\n          handleChange={this.handleChange}\n        />\n        <CardList persons={filteredPeople}></CardList>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}